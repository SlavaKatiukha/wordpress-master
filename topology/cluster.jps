jpsType: install
jpsVersion: '1.1'
name: Wordpress Cluster

globals:
  StackNodeType: ${settings.StackNodeType}
  StackTag: ${settings.StackTag}

nodes:
  - nodeType: nginx-dockerized
    extip: true
    count: 1
    cloudlets: 16
    nodeGroup: bl
    scalingMode: STATEFUL
    volumes:
      - "/var/lib/jelastic/SSL"
    volumeMounts:
      "/var/lib/jelastic/SSL":
        readOnly: false
        sourcePath: "/data/SSL"
        sourceNodeGroup: storage
    displayName: Load balancer

  - nodeType: ${globals.StackNodeType}
    tag: ${globals.StackTag}
    count: 1
    cloudlets: 8
    nodeGroup: cp
    scalingMode: STATEFUL
    displayName: AppServer
    links:
      - sqldb:DB
      - nosqldb:REDIS
    volumes:
      - "/var/www/webroot/ROOT"
    volumeMounts:
      "/var/www/webroot/ROOT":
        readOnly: false
        sourcePath: "/data/ROOT"
        sourceNodeGroup: storage
    env:
      SERVER_WEBROOT: /var/www/webroot/ROOT

  - nodeType: mariadb-dockerized
    tag: 10.3.11
    count: 3
    cloudlets: 8
    nodeGroup: sqldb
    displayName: Database
    env:
      ON_ENV_INSTALL: ''
      JELASTIC_PORTS: '4567,4568,4444'

  - nodeType: storage
    cloudlets: 8
    nodeGroup: storage
    displayName: Storage
    
  - nodeType: redis
    count: 1
    cloudlets: 8
    nodeGroup: nosqldb

onAfterScaleOut[nodeGroup:cp]:
  forEach(event.response.nodes):
    cmd [${@i.id}]: sudo jem service restart
    setNodeDisplayName [${@i.id}]: AppServer

onAfterScaleOut[nodeGroup:bl]:
  forEach(event.response.nodes):
    setNodeDisplayName [${@i.id}]: Load balancer

onAfterMigrate:
  install: ${baseUrl}../addon/Domain.jps?_r=${fn.random}
  envName: ${event.response.env.envName}
  settings:
    new_domain: ${event.response.env.domain}
    
onAfterClone:
  install: ${baseUrl}../addon/Domain.jps?_r=${fn.random}
  envName: ${event.response.env.envName}
  settings:
    new_domain: ${event.response.env.domain}

onInstall:
  - setGlobals:
      DB_USER: ${settings.db_user:jelastic-[fn.random]}
      DB_PASS: ${settings.db_pass:[fn.password(10)]}
      REDIS_PASS: ${settings.redis_pass:[fn.password(10)]}

  - log: Set Node Display Name
  - setNodeDisplayName [bl]: Load balancer
  - setNodeDisplayName [cp]: AppServer
  - setNodeDisplayName [nosqldb]: ObjectCache
  - setNodeDisplayName [storage]: Storage

  - log: DB Galera  Setup
  - install: https://raw.githubusercontent.com/sych74/mysql-cluster/master/scripts/galera-configuration.jps
    settings:
      db_user: "${globals.DB_USER}"
      db_pass: "${globals.DB_PASS}"
      custom_conf: "${baseUrl}../configs/sqldb/wordpress.cnf"
    nodeGroup: sqldb

  - log: Load Balancer Setup
  - install: ${baseUrl}../scripts/setup-BL.jps?_r=${fn.random}

  - log: Redis Setup
  - cmd [nosqldb]: jem passwd set -p ${globals.REDIS_PASS}
    user: root

  - log: App Servers Setup
  - install: ${baseUrl}../scripts/setup-CP.jps?_r=${fn.random}
    settings:
      redis_pass: ${globals.REDIS_PASS}
      
  - log: Auto Scaling Triggers
  - script: "${baseUrl}../scripts/addTriggers.js"
